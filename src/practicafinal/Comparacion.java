/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package practicafinal;

import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author thera
 */
public final class Comparacion extends javax.swing.JFrame {

    Comparacion comparacion;
    String valoraciones[][];
    ArrayList<String> listaHistorias = new ArrayList<>();
    ArrayList<String> listaUsuarios = new ArrayList<>();
    int j = 0;
    int i=0;

    /**
     * Creates new form Comparacion
     *
     * @param valoraciones
     * @param listaHistorias
     * @param listaUsuarios
     */
    public Comparacion(String valoraciones[][], ArrayList<String> listaHistorias, ArrayList<String> listaUsuarios) {
        initComponents();
        rellenarTablaUsuarios(listaUsuarios);
        rellenarTablaNotas(valoraciones, listaUsuarios);
        this.valoraciones = valoraciones;
        this.listaHistorias = listaHistorias;
        this.listaUsuarios = listaUsuarios;
        jLabelHistoria.setText(listaHistorias.get(j));
    }

    public DefaultTableModel modeloTablaUsuario = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    public void asignarModelo(Comparacion comparacion) {
        comparacion.jTableUsuarios.setModel(modeloTablaUsuario);
    }

    public void vaciarTablaUsuarios() {
        while (modeloTablaUsuario.getRowCount() > 0) {
            modeloTablaUsuario.removeRow(0);
        }
    }

    public void dibujarTablaUsuarios(Comparacion comparacion) {

        comparacion.jTableUsuarios.setModel(modeloTablaUsuario);
        System.out.println("FUNCIONA");
        String[] columnasTabla = {"Nombre"};

        modeloTablaUsuario.setColumnIdentifiers(columnasTabla);

        comparacion.jTableUsuarios.getTableHeader().setResizingAllowed(false);
        comparacion.jTableUsuarios.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);

        comparacion.jTableUsuarios.getColumnModel().getColumn(0).setPreferredWidth(90);
    }

    public void rellenarTablaUsuarios(ArrayList<String> listaUsuarios) {
        String[] fila = new String[1];
        int numUsuarios = listaUsuarios.size();
        for (int i = 0; i < numUsuarios; i++) {
            fila[0] = listaUsuarios.get(i);
            modeloTablaUsuario.addRow(fila);
        }
    }
    
    public DefaultTableModel modeloTablaNotas = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    
    public void asignarModeloNotas(Comparacion comparacion) {
        comparacion.jTableNotas.setModel(modeloTablaNotas);
    }
    
    public void vaciarTablaNotas() {
        while (modeloTablaNotas.getRowCount() > 0) {
            modeloTablaNotas.removeRow(0);
        }
    }
    
    public void dibujarTablaNotas(Comparacion comparacion) {

        comparacion.jTableNotas.setModel(modeloTablaNotas);
        System.out.println("FUNCIONA");
        String[] columnasTabla = {"Notas"};

        modeloTablaNotas.setColumnIdentifiers(columnasTabla);

        comparacion.jTableNotas.getTableHeader().setResizingAllowed(false);
        comparacion.jTableNotas.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);

        comparacion.jTableNotas.getColumnModel().getColumn(0).setPreferredWidth(90);
    }

    public void rellenarTablaNotas(String[][] valoraciones, ArrayList<String> listaUsuarios) {
        String[] fila = new String[1];
        int numUsuarios = listaUsuarios.size();
        for (int k = 0; k < numUsuarios; k++) {
            fila[0] = valoraciones[i][k];
            modeloTablaNotas.addRow(fila);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelHistoria = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsuarios = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableNotas = new javax.swing.JTable();
        jButtonSiguienteHistoria = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Valoracion de la historia:");

        jLabelHistoria.setText("jLabel2");

        jTableUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Usuarios"
            }
        ));
        jScrollPane1.setViewportView(jTableUsuarios);

        jTableNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Notas"
            }
        ));
        jScrollPane2.setViewportView(jTableNotas);

        jButtonSiguienteHistoria.setText("Siguiente Historia");
        jButtonSiguienteHistoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSiguienteHistoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(100, 100, 100)
                                .addComponent(jLabelHistoria))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(jButtonSiguienteHistoria)))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabelHistoria))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jButtonSiguienteHistoria)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSiguienteHistoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSiguienteHistoriaActionPerformed
        i++;
        j++;
        jLabelHistoria.setText(listaHistorias.get(j));
        vaciarTablaNotas();
        rellenarTablaNotas(valoraciones, listaUsuarios);
    }//GEN-LAST:event_jButtonSiguienteHistoriaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jButtonSiguienteHistoria;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabelHistoria;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable jTableNotas;
    public javax.swing.JTable jTableUsuarios;
    // End of variables declaration//GEN-END:variables

}
